#name: ci-test
#
#on:
#  push:
#    branches: [ main, master ]
#  pull_request:
#    branches: [ main, master ]
#
#jobs:
#  build-linux:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v2
#        with:
#          submodules: recursive
#      - name: Set up Node.js 16.x
#        uses: actions/setup-node@v2
#        with:
#          node-version: '16.x'
#      - name: Set up Python 3.11
#        uses: actions/setup-python@v2
#        with:
#          python-version: 3.11
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install -r requirements-dev.txt
#          pip install -e .
#      - name: Testing
#        run: |
#          python -m pytest --cov=fastvector tests
#          python -m codecov



name: ci-test

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-linux:
    runs-on: ubuntu-latest  # Use runner with pre-installed Docker
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.11
        uses: actions/setup-python@v2
        with:
          python-version: 3.11
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install -e .
      - name: Testing
        run: |
          python -m pytest --cov=fastvector tests
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: 'Set up db'
        run: |
          echo ---Building and starting up docker---
          docker compose -f docker-compose.test.yml up -d --wait
          echo ---Containers up---
      - name: Install Prisma
        run: npm install @prisma/cli --save-dev
      - name: Start containers using docker-compose
        run: docker-compose -f docker-compose.yml up -d
      - name: Push DB schema using Prisma ORM
        run: npx prisma migrate dev --name init --preview-feature
